% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_graph.R
\name{sample_graph}
\alias{sample_graph}
\title{Simulate a sampling regime and calculate network modularity.}
\usage{
sample_graph(
  graph,
  missingness,
  propGPS = 1,
  gps_freq = 30/365,
  vhf_freq = 8/365,
  regime = "better"
)
}
\arguments{
\item{graph}{The true network to sample}

\item{missingness}{The proportion of the nodes in the real network that will
be missed in sampling}

\item{propGPS}{The proportion of high resolution data to use}

\item{gps_freq}{The observation frequency (observations per sampling period)
of the high res data}

\item{vhf_freq}{Observations per sampling period of the low res data}

\item{regime}{Whether to sample modules randomly or impose 'evenness'. options include "random", "even", "better"}
}
\value{
g_obs, the graph of the observed network
}
\description{
Simulate a sampling regime and calculate network modularity.
}
\examples{
data("real_networks")
data("study_design")

row_index <- study_design \%>\%
  mutate(index = row.names(.)) \%>\%
  filter(nNodes == 50) \%>\%
  arrange(-qrel) \%>\%
  slice(1:10) \%>\%
  select(index)
reduced_design <- study_design[as.numeric(row_index$index), ]
reduced_networks <- real_networks[as.numeric(row_index$index)]

g_obs <- sample_graph(
  graph = reduced_networks[[1]],
  missingness = 0.5,
  propGPS = 1,
  regime = "better")

am_obs <- igraph::get.adjacency(g_obs, type = "upper", attr = "sim_weight") \%>\%
  as.matrix()

reduced_design[1,] \%>\%
  mutate(missingness = 0.5,
         prop_gps = 1,
         qrel_sim = assortnet::assortment.discrete(am_obs, types = igraph::V(g_obs)$membership, weighted = T)$r,
         nNodes_sim = ncol(am_obs),
         nModules_sim = length(unique(igraph::V(g_obs)$membership))) \%>\%
  select( - c(vals, obs_freq))

plot(g_obs,
     layout = igraph::layout.fruchterman.reingold(g_obs),
     edge.width = igraph::E(g_obs)$sim_weight*2,
     vertex.frame.color = "grey20")
}
