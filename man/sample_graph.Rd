% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_graph.R
\name{sample_graph}
\alias{sample_graph}
\title{Simulate a sampling regime and calculate network modularity.}
\usage{
sample_graph(
  graph,
  sample_nNodes,
  prop_hi_res = 1,
  hi_res = 30/365,
  lo_res = 5/365,
  regime = "better",
  alg = "netcarto"
)
}
\arguments{
\item{graph}{The true network to sample}

\item{sample_nNodes}{the number of individuals to sample}

\item{prop_hi_res}{The proportion of high resolution data to use}

\item{hi_res}{The observation frequency (observations per sampling period)
of the high res data}

\item{lo_res}{Observations per sampling period of the low res data}

\item{regime}{Whether to sample modules randomly or impose 'evenness'. options include "random", "even", "better"}

\item{alg}{the clustering algorithm to use, one of: "fast_greedy", "louvain", "leading_eigen", "walktrap", or "netcarto"}
}
\value{
g_obs, the graph of the observed network
}
\description{
Simulate a sampling regime and calculate network modularity.
}
\examples{
data("real_networks")
data("study_design")
g_obs <- sample_graph(
  graph = real_networks[[1]],
  sample_nNodes = ceiling(0.5 * length(igraph::V(real_networks[[1]]))),
  prop_hi_res = 1,
  regime = "better")
am_obs <- igraph::get.adjacency(g_obs, type = "upper", attr = "sim_weight") \%>\%
  as.matrix()
qrel_hat <- assortnet::assortment.discrete(am_obs,
types = igraph::V(g_obs)$membership, weighted = TRUE)$r
study_design[1,] \%>\%
  dplyr::mutate(prop_hi_res = 1,
                nNodes_sim = ncol(am_obs),
                nModules_sim = length(unique(igraph::V(g_obs)$membership)),
                qrel_sim = qrel_hat)

}
